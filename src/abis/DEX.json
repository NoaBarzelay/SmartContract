{
  "contractName": "DEX",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract ERC20Token",
          "name": "_token",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Bought",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Sold",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract ERC20Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "buyTokens",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "sellTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ERC20Token\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Bought\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Sold\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"buyTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sellTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract ERC20Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/DEX.sol\":\"DEX\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/DEX.sol\":{\"keccak256\":\"0x7baf50de7b3109483a2c61ecb467fcd14975d3b60c74fb689bbdf858504aeb3e\",\"urls\":[\"bzz-raw://3ca8937302f653e32d2355a5d1e8c2ac76fcacd6b4aa528af23ce3c07bd0c096\",\"dweb:/ipfs/QmcrosAZ3pK68ZNiDYy4bSBYT6WMazYhu51HkJKZhmhXzt\"]},\"project:/contracts/ERC20Interface.sol\":{\"keccak256\":\"0xb2c965e05979eb15dfd9c67532f3f52c147d3a70a2bf563fd08ceb49155c6d91\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://50cbab7d47c0cfe45ca603c635a5ce704aa8846b9b992894dd15beb446b5ca6a\",\"dweb:/ipfs/QmR5vcyWPmZZuRNbHg1a2yjS3ezTjFwzGv5EqqTAeihoFW\"]},\"project:/contracts/ERC20Token.sol\":{\"keccak256\":\"0x78d2475f2b8d38c3c90691490e2cb4d727cda98fa69dbab068c8c38d7c69c5f5\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a6f580f768da9d9fa97d2c09412845b6c8db9313cf946af5e74d077f375997a7\",\"dweb:/ipfs/QmTxHtzkYySFJ9Sa4ktEPsfUCAWiwp3SoVhein6J8VDrJU\"]},\"project:/node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2ebbbe6d0011175bd9e7268b83de3f9c2f9d8d4cbfbaef12aff977d7d727163\",\"dweb:/ipfs/Qmd5c7Vxtis9wzkDNhxwc6A2QT5H9xn9kfjhx7qx44vpro\"]},\"project:/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26e8b38a7ac8e7b4463af00cf7fff1bf48ae9875765bf4f7751e100124d0bc8c\",\"dweb:/ipfs/QmWcsmkVr24xmmjfnBQZoemFniXjj3vwT78Cz6uqZW1Hux\"]}},\"version\":1}",
  "bytecode": "0x60806040526040518060400160405280600381526020017f44455800000000000000000000000000000000000000000000000000000000008152506001908051906020019062000051929190620000cc565b503480156200005f57600080fd5b5060405162000e5038038062000e50833981810160405281019062000085919062000193565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000291565b828054620000da906200020d565b90600052602060002090601f016020900481019282620000fe57600085556200014a565b82601f106200011957805160ff19168380011785556200014a565b828001600101855582156200014a579182015b82811115620001495782518255916020019190600101906200012c565b5b5090506200015991906200015d565b5090565b5b80821115620001785760008160009055506001016200015e565b5090565b6000815190506200018d8162000277565b92915050565b600060208284031215620001ac57620001ab62000272565b5b6000620001bc848285016200017c565b91505092915050565b6000620001d282620001ed565b9050919050565b6000620001e682620001c5565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600060028204905060018216806200022657607f821691505b602082108114156200023d576200023c62000243565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b6200028281620001d9565b81146200028e57600080fd5b50565b610baf80620002a16000396000f3fe60806040526004361061003f5760003560e01c806306fdde03146100445780636c11bcd31461006f578063d0febe4c14610098578063fc0c546a146100a2575b600080fd5b34801561005057600080fd5b506100596100cd565b6040516100669190610880565b60405180910390f35b34801561007b57600080fd5b5061009660048036038101906100919190610675565b61015b565b005b6100a06103c3565b005b3480156100ae57600080fd5b506100b76105e5565b6040516100c49190610865565b60405180910390f35b600180546100da90610a0a565b80601f016020809104026020016040519081016040528092919081815260200182805461010690610a0a565b80156101535780601f1061012857610100808354040283529160200191610153565b820191906000526020600020905b81548152906001019060200180831161013657829003601f168201915b505050505081565b6000811161019e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610195906108c2565b60405180910390fd5b804710156101e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d8906108a2565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b815260040161023f9291906107dc565b60206040518083038186803b15801561025757600080fd5b505afa15801561026b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028f91906106a2565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016102ee93929190610805565b602060405180830381600087803b15801561030857600080fd5b505af115801561031c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103409190610648565b503373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610387573d6000803e3d6000fd5b507f92f64ca637d023f354075a4be751b169c1a8a9ccb6d33cdd0cb3520543995727826040516103b79190610922565b60405180910390a15050565b600034905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161042491906107c1565b60206040518083038186803b15801561043c57600080fd5b505afa158015610450573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047491906106a2565b9050600082116104b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b090610902565b60405180910390fd5b808211156104fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f3906108e2565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b815260040161055792919061083c565b602060405180830381600087803b15801561057157600080fd5b505af1158015610585573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a99190610648565b507f4e08ba899977cf7d4c2964bce71c6b9a7ef76ee5166a4c1249a1e08016e33ef1826040516105d99190610922565b60405180910390a15050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008151905061061881610b4b565b92915050565b60008135905061062d81610b62565b92915050565b60008151905061064281610b62565b92915050565b60006020828403121561065e5761065d610a6b565b5b600061066c84828501610609565b91505092915050565b60006020828403121561068b5761068a610a6b565b5b60006106998482850161061e565b91505092915050565b6000602082840312156106b8576106b7610a6b565b5b60006106c684828501610633565b91505092915050565b6106d881610959565b82525050565b6106e7816109a1565b82525050565b60006106f88261093d565b6107028185610948565b93506107128185602086016109d7565b61071b81610a70565b840191505092915050565b6000610733601f83610948565b915061073e82610a81565b602082019050919050565b6000610756602583610948565b915061076182610aaa565b604082019050919050565b6000610779602083610948565b915061078482610af9565b602082019050919050565b600061079c601b83610948565b91506107a782610b22565b602082019050919050565b6107bb81610997565b82525050565b60006020820190506107d660008301846106cf565b92915050565b60006040820190506107f160008301856106cf565b6107fe60208301846106cf565b9392505050565b600060608201905061081a60008301866106cf565b61082760208301856106cf565b61083460408301846107b2565b949350505050565b600060408201905061085160008301856106cf565b61085e60208301846107b2565b9392505050565b600060208201905061087a60008301846106de565b92915050565b6000602082019050818103600083015261089a81846106ed565b905092915050565b600060208201905081810360008301526108bb81610726565b9050919050565b600060208201905081810360008301526108db81610749565b9050919050565b600060208201905081810360008301526108fb8161076c565b9050919050565b6000602082019050818103600083015261091b8161078f565b9050919050565b600060208201905061093760008301846107b2565b92915050565b600081519050919050565b600082825260208201905092915050565b600061096482610977565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006109ac826109b3565b9050919050565b60006109be826109c5565b9050919050565b60006109d082610977565b9050919050565b60005b838110156109f55780820151818401526020810190506109da565b83811115610a04576000848401525b50505050565b60006002820490506001821680610a2257607f821691505b60208210811415610a3657610a35610a3c565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f4e6f7420656e6f75676820657468657220696e20746865207265736572766500600082015250565b7f596f75206e65656420746f2073656c6c206174206c6561737420736f6d65207460008201527f6f6b656e73000000000000000000000000000000000000000000000000000000602082015250565b7f4e6f7420656e6f75676820746f6b656e7320696e207468652072657365727665600082015250565b7f596f75206e65656420746f2073656e6420736f6d652065746865720000000000600082015250565b610b548161096b565b8114610b5f57600080fd5b50565b610b6b81610997565b8114610b7657600080fd5b5056fea26469706673582212204ce9b1ab9fa14649257efae9f54cffe6bd6400d31a4cfebab93926a33e50e3db64736f6c63430008070033",
  "deployedBytecode": "0x60806040526004361061003f5760003560e01c806306fdde03146100445780636c11bcd31461006f578063d0febe4c14610098578063fc0c546a146100a2575b600080fd5b34801561005057600080fd5b506100596100cd565b6040516100669190610880565b60405180910390f35b34801561007b57600080fd5b5061009660048036038101906100919190610675565b61015b565b005b6100a06103c3565b005b3480156100ae57600080fd5b506100b76105e5565b6040516100c49190610865565b60405180910390f35b600180546100da90610a0a565b80601f016020809104026020016040519081016040528092919081815260200182805461010690610a0a565b80156101535780601f1061012857610100808354040283529160200191610153565b820191906000526020600020905b81548152906001019060200180831161013657829003601f168201915b505050505081565b6000811161019e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610195906108c2565b60405180910390fd5b804710156101e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d8906108a2565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b815260040161023f9291906107dc565b60206040518083038186803b15801561025757600080fd5b505afa15801561026b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028f91906106a2565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016102ee93929190610805565b602060405180830381600087803b15801561030857600080fd5b505af115801561031c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103409190610648565b503373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610387573d6000803e3d6000fd5b507f92f64ca637d023f354075a4be751b169c1a8a9ccb6d33cdd0cb3520543995727826040516103b79190610922565b60405180910390a15050565b600034905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161042491906107c1565b60206040518083038186803b15801561043c57600080fd5b505afa158015610450573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047491906106a2565b9050600082116104b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b090610902565b60405180910390fd5b808211156104fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f3906108e2565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b815260040161055792919061083c565b602060405180830381600087803b15801561057157600080fd5b505af1158015610585573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a99190610648565b507f4e08ba899977cf7d4c2964bce71c6b9a7ef76ee5166a4c1249a1e08016e33ef1826040516105d99190610922565b60405180910390a15050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008151905061061881610b4b565b92915050565b60008135905061062d81610b62565b92915050565b60008151905061064281610b62565b92915050565b60006020828403121561065e5761065d610a6b565b5b600061066c84828501610609565b91505092915050565b60006020828403121561068b5761068a610a6b565b5b60006106998482850161061e565b91505092915050565b6000602082840312156106b8576106b7610a6b565b5b60006106c684828501610633565b91505092915050565b6106d881610959565b82525050565b6106e7816109a1565b82525050565b60006106f88261093d565b6107028185610948565b93506107128185602086016109d7565b61071b81610a70565b840191505092915050565b6000610733601f83610948565b915061073e82610a81565b602082019050919050565b6000610756602583610948565b915061076182610aaa565b604082019050919050565b6000610779602083610948565b915061078482610af9565b602082019050919050565b600061079c601b83610948565b91506107a782610b22565b602082019050919050565b6107bb81610997565b82525050565b60006020820190506107d660008301846106cf565b92915050565b60006040820190506107f160008301856106cf565b6107fe60208301846106cf565b9392505050565b600060608201905061081a60008301866106cf565b61082760208301856106cf565b61083460408301846107b2565b949350505050565b600060408201905061085160008301856106cf565b61085e60208301846107b2565b9392505050565b600060208201905061087a60008301846106de565b92915050565b6000602082019050818103600083015261089a81846106ed565b905092915050565b600060208201905081810360008301526108bb81610726565b9050919050565b600060208201905081810360008301526108db81610749565b9050919050565b600060208201905081810360008301526108fb8161076c565b9050919050565b6000602082019050818103600083015261091b8161078f565b9050919050565b600060208201905061093760008301846107b2565b92915050565b600081519050919050565b600082825260208201905092915050565b600061096482610977565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006109ac826109b3565b9050919050565b60006109be826109c5565b9050919050565b60006109d082610977565b9050919050565b60005b838110156109f55780820151818401526020810190506109da565b83811115610a04576000848401525b50505050565b60006002820490506001821680610a2257607f821691505b60208210811415610a3657610a35610a3c565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f4e6f7420656e6f75676820657468657220696e20746865207265736572766500600082015250565b7f596f75206e65656420746f2073656c6c206174206c6561737420736f6d65207460008201527f6f6b656e73000000000000000000000000000000000000000000000000000000602082015250565b7f4e6f7420656e6f75676820746f6b656e7320696e207468652072657365727665600082015250565b7f596f75206e65656420746f2073656e6420736f6d652065746865720000000000600082015250565b610b548161096b565b8114610b5f57600080fd5b50565b610b6b81610997565b8114610b7657600080fd5b5056fea26469706673582212204ce9b1ab9fa14649257efae9f54cffe6bd6400d31a4cfebab93926a33e50e3db64736f6c63430008070033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1939:5",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "88:98:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "98:22:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "113:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "107:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:13:5"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "98:5:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "174:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_ERC20Token_$579",
                      "nodeType": "YulIdentifier",
                      "src": "129:44:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "129:51:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "129:51:5"
                }
              ]
            },
            "name": "abi_decode_t_contract$_ERC20Token_$579_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "66:6:5",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "74:3:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "82:5:5",
                "type": ""
              }
            ],
            "src": "7:179:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "287:292:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "333:83:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "335:77:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "335:79:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "335:79:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "308:7:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "317:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "304:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "304:23:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "329:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "300:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "300:32:5"
                  },
                  "nodeType": "YulIf",
                  "src": "297:119:5"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "426:146:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "441:15:5",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "455:1:5",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "445:6:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "470:92:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "534:9:5"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "545:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "530:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "530:22:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "554:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_ERC20Token_$579_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "480:49:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "480:82:5"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "470:6:5"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_ERC20Token_$579_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "257:9:5",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "268:7:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "280:6:5",
                "type": ""
              }
            ],
            "src": "192:387:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "625:35:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "635:19:5",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "651:2:5",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "645:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "645:9:5"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "635:6:5"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "618:6:5",
                "type": ""
              }
            ],
            "src": "585:75:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "711:51:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "721:35:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "750:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "732:17:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "732:24:5"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "721:7:5"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "693:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "703:7:5",
                "type": ""
              }
            ],
            "src": "666:96:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "831:51:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "841:35:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "870:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "852:17:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "852:24:5"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "841:7:5"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_ERC20Token_$579",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "813:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "823:7:5",
                "type": ""
              }
            ],
            "src": "768:114:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "933:81:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "943:65:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "958:5:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "965:42:5",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "954:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "954:54:5"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "943:7:5"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "915:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "925:7:5",
                "type": ""
              }
            ],
            "src": "888:126:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1071:269:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1081:22:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "1095:4:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1101:1:5",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "1091:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1091:12:5"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "1081:6:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1112:38:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "1142:4:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1148:1:5",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1138:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1138:12:5"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "1116:18:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1189:51:5",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1203:27:5",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "1217:6:5"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1225:4:5",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "1213:3:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1213:17:5"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1203:6:5"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "1169:18:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1162:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1162:26:5"
                  },
                  "nodeType": "YulIf",
                  "src": "1159:81:5"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1292:42:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x22",
                            "nodeType": "YulIdentifier",
                            "src": "1306:16:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1306:18:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1306:18:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "1256:18:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1279:6:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1287:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1276:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1276:14:5"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "1253:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1253:38:5"
                  },
                  "nodeType": "YulIf",
                  "src": "1250:84:5"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "1055:4:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1064:6:5",
                "type": ""
              }
            ],
            "src": "1020:320:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1374:152:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1391:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1394:77:5",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1384:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1384:88:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1384:88:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1488:1:5",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1491:4:5",
                        "type": "",
                        "value": "0x22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1481:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1481:15:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1481:15:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1512:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1515:4:5",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1505:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1505:15:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1505:15:5"
                }
              ]
            },
            "name": "panic_error_0x22",
            "nodeType": "YulFunctionDefinition",
            "src": "1346:180:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1621:28:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1638:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1641:1:5",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1631:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1631:12:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1631:12:5"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "1532:117:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1744:28:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1761:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1764:1:5",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1754:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1754:12:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1754:12:5"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "1655:117:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1839:97:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1914:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1923:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1926:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1916:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1916:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1916:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1862:5:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1905:5:5"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_ERC20Token_$579",
                              "nodeType": "YulIdentifier",
                              "src": "1869:35:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1869:42:5"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1859:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1859:53:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1852:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1852:61:5"
                  },
                  "nodeType": "YulIf",
                  "src": "1849:81:5"
                }
              ]
            },
            "name": "validator_revert_t_contract$_ERC20Token_$579",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1832:5:5",
                "type": ""
              }
            ],
            "src": "1778:158:5"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_contract$_ERC20Token_$579_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_ERC20Token_$579(value)\n    }\n\n    function abi_decode_tuple_t_contract$_ERC20Token_$579_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_ERC20Token_$579_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_ERC20Token_$579(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_contract$_ERC20Token_$579(value) {\n        if iszero(eq(value, cleanup_t_contract$_ERC20Token_$579(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 5,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:11038:5",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "67:77:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "77:22:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "92:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "86:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "86:13:5"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "77:5:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "132:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "108:23:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:30:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "108:30:5"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "45:6:5",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "53:3:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "61:5:5",
                "type": ""
              }
            ],
            "src": "7:137:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "202:87:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "212:29:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "234:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "221:12:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "221:20:5"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "212:5:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "277:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "250:26:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "250:33:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "250:33:5"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "180:6:5",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "188:3:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "196:5:5",
                "type": ""
              }
            ],
            "src": "150:139:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "358:80:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "368:22:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "383:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "377:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "377:13:5"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "368:5:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "426:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "399:26:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "399:33:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "399:33:5"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "336:6:5",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "344:3:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "352:5:5",
                "type": ""
              }
            ],
            "src": "295:143:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "518:271:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "564:83:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "566:77:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "566:79:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "566:79:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "539:7:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "548:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "535:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "535:23:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "560:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "531:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "531:32:5"
                  },
                  "nodeType": "YulIf",
                  "src": "528:119:5"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "657:125:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "672:15:5",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "686:1:5",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "676:6:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "701:71:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "744:9:5"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "755:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "740:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "740:22:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "764:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "711:28:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "711:61:5"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "701:6:5"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "488:9:5",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "499:7:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "511:6:5",
                "type": ""
              }
            ],
            "src": "444:345:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "861:263:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "907:83:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "909:77:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "909:79:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "909:79:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "882:7:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "891:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "878:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "878:23:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "903:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "874:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "874:32:5"
                  },
                  "nodeType": "YulIf",
                  "src": "871:119:5"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1000:117:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1015:15:5",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1029:1:5",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1019:6:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1044:63:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1079:9:5"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1090:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1075:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1075:22:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1099:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1054:20:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1054:53:5"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1044:6:5"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "831:9:5",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "842:7:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "854:6:5",
                "type": ""
              }
            ],
            "src": "795:329:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1207:274:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1253:83:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1255:77:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1255:79:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1255:79:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1228:7:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1237:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1224:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1224:23:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1249:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1220:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1220:32:5"
                  },
                  "nodeType": "YulIf",
                  "src": "1217:119:5"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1346:128:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1361:15:5",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1375:1:5",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1365:6:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1390:74:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1436:9:5"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1447:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1432:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1432:22:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1456:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1400:31:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1400:64:5"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1390:6:5"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1177:9:5",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1188:7:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1200:6:5",
                "type": ""
              }
            ],
            "src": "1130:351:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1552:53:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1569:3:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1592:5:5"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1574:17:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1574:24:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1562:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1562:37:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1562:37:5"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1540:5:5",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1547:3:5",
                "type": ""
              }
            ],
            "src": "1487:118:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1698:88:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1715:3:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1773:5:5"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_ERC20Interface_$239_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1720:52:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1720:59:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1708:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1708:72:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1708:72:5"
                }
              ]
            },
            "name": "abi_encode_t_contract$_ERC20Interface_$239_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1686:5:5",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1693:3:5",
                "type": ""
              }
            ],
            "src": "1611:175:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1884:272:5",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1894:53:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1941:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "1908:32:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1908:39:5"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1898:6:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1956:78:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2022:3:5"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2027:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1963:58:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1963:71:5"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "1956:3:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2069:5:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2076:4:5",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2065:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2065:16:5"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2083:3:5"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2088:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "2043:21:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2043:52:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2043:52:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2104:46:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2115:3:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2142:6:5"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "2120:21:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2120:29:5"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2111:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2111:39:5"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2104:3:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1865:5:5",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1872:3:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1880:3:5",
                "type": ""
              }
            ],
            "src": "1792:364:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2308:220:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2318:74:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2384:3:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2389:2:5",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2325:58:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2325:67:5"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2318:3:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2490:3:5"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_141fcb4cadd1d2d547f0a89092e511d28de4d9074ef5386aa9ed6d5ae1e3c484",
                      "nodeType": "YulIdentifier",
                      "src": "2401:88:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2401:93:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2401:93:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2503:19:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2514:3:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2519:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2510:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2510:12:5"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2503:3:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_141fcb4cadd1d2d547f0a89092e511d28de4d9074ef5386aa9ed6d5ae1e3c484_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2296:3:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2304:3:5",
                "type": ""
              }
            ],
            "src": "2162:366:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2680:220:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2690:74:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2756:3:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2761:2:5",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2697:58:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2697:67:5"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2690:3:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2862:3:5"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_678ee0b96747772543566939e944d1564f7cbd541aeffda6bfd357fe4a2fbd61",
                      "nodeType": "YulIdentifier",
                      "src": "2773:88:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2773:93:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2773:93:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2875:19:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2886:3:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2891:2:5",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2882:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2882:12:5"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2875:3:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_678ee0b96747772543566939e944d1564f7cbd541aeffda6bfd357fe4a2fbd61_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2668:3:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2676:3:5",
                "type": ""
              }
            ],
            "src": "2534:366:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3052:220:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3062:74:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3128:3:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3133:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3069:58:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3069:67:5"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3062:3:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3234:3:5"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_e11c8f04e2b1fb46d5ad724dbc8387e938437ecdd510be07e544e2a61a447dca",
                      "nodeType": "YulIdentifier",
                      "src": "3145:88:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3145:93:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3145:93:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3247:19:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3258:3:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3263:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3254:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3254:12:5"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3247:3:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_e11c8f04e2b1fb46d5ad724dbc8387e938437ecdd510be07e544e2a61a447dca_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3040:3:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3048:3:5",
                "type": ""
              }
            ],
            "src": "2906:366:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3424:220:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3434:74:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3500:3:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3505:2:5",
                        "type": "",
                        "value": "27"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3441:58:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3441:67:5"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3434:3:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3606:3:5"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_e9acd944d98c8ae0ab88f544d8f5ce84bcc3e9ee2749b1db4940bca15dfc8a6d",
                      "nodeType": "YulIdentifier",
                      "src": "3517:88:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3517:93:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3517:93:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3619:19:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3630:3:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3635:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3626:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3626:12:5"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3619:3:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_e9acd944d98c8ae0ab88f544d8f5ce84bcc3e9ee2749b1db4940bca15dfc8a6d_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3412:3:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3420:3:5",
                "type": ""
              }
            ],
            "src": "3278:366:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3715:53:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3732:3:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3755:5:5"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3737:17:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3737:24:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3725:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3725:37:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3725:37:5"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3703:5:5",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3710:3:5",
                "type": ""
              }
            ],
            "src": "3650:118:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3872:124:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3882:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3894:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3905:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3890:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3890:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3882:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3962:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3975:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3986:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3971:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3971:17:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3918:43:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3918:71:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3918:71:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3844:9:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3856:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3867:4:5",
                "type": ""
              }
            ],
            "src": "3774:222:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4128:206:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4138:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4150:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4161:2:5",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4146:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4146:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4138:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4218:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4231:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4242:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4227:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4227:17:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4174:43:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4174:71:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4174:71:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4299:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4312:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4323:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4308:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4308:18:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4255:43:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4255:72:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4255:72:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4092:9:5",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4104:6:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4112:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4123:4:5",
                "type": ""
              }
            ],
            "src": "4002:332:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4494:288:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4504:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4516:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4527:2:5",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4512:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4512:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4504:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4584:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4597:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4608:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4593:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4593:17:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4540:43:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4540:71:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4540:71:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4665:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4678:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4689:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4674:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4674:18:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4621:43:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4621:72:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4621:72:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "4747:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4760:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4771:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4756:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4756:18:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4703:43:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4703:72:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4703:72:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4450:9:5",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4462:6:5",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4470:6:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4478:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4489:4:5",
                "type": ""
              }
            ],
            "src": "4340:442:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4914:206:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4924:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4936:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4947:2:5",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4932:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4932:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4924:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5004:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5017:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5028:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5013:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5013:17:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4960:43:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4960:71:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4960:71:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5085:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5098:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5109:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5094:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5094:18:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5041:43:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5041:72:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5041:72:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4878:9:5",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4890:6:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4898:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4909:4:5",
                "type": ""
              }
            ],
            "src": "4788:332:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5246:146:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5256:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5268:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5279:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5264:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5264:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5256:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5358:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5371:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5382:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5367:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5367:17:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_ERC20Interface_$239_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5292:65:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5292:93:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5292:93:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_ERC20Interface_$239__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5218:9:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5230:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5241:4:5",
                "type": ""
              }
            ],
            "src": "5126:266:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5516:195:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5526:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5538:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5549:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5534:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5534:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5526:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5573:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5584:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5569:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5569:17:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5592:4:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5598:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5588:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5588:20:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5562:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5562:47:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5562:47:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5618:86:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5690:6:5"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5699:4:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5626:63:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5626:78:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5618:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5488:9:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5500:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5511:4:5",
                "type": ""
              }
            ],
            "src": "5398:313:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5888:248:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5898:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5910:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5921:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5906:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5906:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5898:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5945:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5956:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5941:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5941:17:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5964:4:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5970:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5960:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5960:20:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5934:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5934:47:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5934:47:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5990:139:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "6124:4:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_141fcb4cadd1d2d547f0a89092e511d28de4d9074ef5386aa9ed6d5ae1e3c484_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5998:124:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5998:131:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5990:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_141fcb4cadd1d2d547f0a89092e511d28de4d9074ef5386aa9ed6d5ae1e3c484__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5868:9:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5883:4:5",
                "type": ""
              }
            ],
            "src": "5717:419:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6313:248:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6323:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6335:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6346:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6331:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6331:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6323:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6370:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6381:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6366:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6366:17:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6389:4:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6395:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6385:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6385:20:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6359:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6359:47:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6359:47:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6415:139:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "6549:4:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_678ee0b96747772543566939e944d1564f7cbd541aeffda6bfd357fe4a2fbd61_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6423:124:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6423:131:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6415:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_678ee0b96747772543566939e944d1564f7cbd541aeffda6bfd357fe4a2fbd61__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6293:9:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6308:4:5",
                "type": ""
              }
            ],
            "src": "6142:419:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6738:248:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6748:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6760:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6771:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6756:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6756:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6748:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6795:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6806:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6791:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6791:17:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6814:4:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6820:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6810:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6810:20:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6784:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6784:47:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6784:47:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6840:139:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "6974:4:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_e11c8f04e2b1fb46d5ad724dbc8387e938437ecdd510be07e544e2a61a447dca_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6848:124:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6848:131:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6840:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e11c8f04e2b1fb46d5ad724dbc8387e938437ecdd510be07e544e2a61a447dca__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6718:9:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6733:4:5",
                "type": ""
              }
            ],
            "src": "6567:419:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7163:248:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7173:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7185:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7196:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7181:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7181:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7173:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7220:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7231:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7216:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7216:17:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7239:4:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7245:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7235:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7235:20:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7209:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7209:47:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7209:47:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7265:139:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7399:4:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_e9acd944d98c8ae0ab88f544d8f5ce84bcc3e9ee2749b1db4940bca15dfc8a6d_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7273:124:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7273:131:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7265:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e9acd944d98c8ae0ab88f544d8f5ce84bcc3e9ee2749b1db4940bca15dfc8a6d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7143:9:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7158:4:5",
                "type": ""
              }
            ],
            "src": "6992:419:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7515:124:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7525:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7537:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7548:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7533:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7533:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7525:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7605:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7618:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7629:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7614:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7614:17:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7561:43:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7561:71:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7561:71:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7487:9:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7499:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7510:4:5",
                "type": ""
              }
            ],
            "src": "7417:222:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7685:35:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7695:19:5",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7711:2:5",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7705:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7705:9:5"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "7695:6:5"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "7678:6:5",
                "type": ""
              }
            ],
            "src": "7645:75:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7785:40:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7796:22:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7812:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7806:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7806:12:5"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "7796:6:5"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7768:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7778:6:5",
                "type": ""
              }
            ],
            "src": "7726:99:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7927:73:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7944:3:5"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7949:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7937:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7937:19:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7937:19:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7965:29:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7984:3:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7989:4:5",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7980:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7980:14:5"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "7965:11:5"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7899:3:5",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7904:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "7915:11:5",
                "type": ""
              }
            ],
            "src": "7831:169:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8051:51:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8061:35:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8090:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "8072:17:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8072:24:5"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "8061:7:5"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8033:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "8043:7:5",
                "type": ""
              }
            ],
            "src": "8006:96:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8150:48:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8160:32:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8185:5:5"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "8178:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8178:13:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8171:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8171:21:5"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "8160:7:5"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8132:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "8142:7:5",
                "type": ""
              }
            ],
            "src": "8108:90:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8249:81:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8259:65:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8274:5:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8281:42:5",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "8270:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8270:54:5"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "8259:7:5"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8231:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "8241:7:5",
                "type": ""
              }
            ],
            "src": "8204:126:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8381:32:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8391:16:5",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "8402:5:5"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "8391:7:5"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8363:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "8373:7:5",
                "type": ""
              }
            ],
            "src": "8336:77:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8501:66:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8511:50:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8555:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "8524:30:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8524:37:5"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "8511:9:5"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_ERC20Interface_$239_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8481:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "8491:9:5",
                "type": ""
              }
            ],
            "src": "8419:148:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8633:66:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8643:50:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8687:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "8656:30:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8656:37:5"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "8643:9:5"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8613:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "8623:9:5",
                "type": ""
              }
            ],
            "src": "8573:126:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8765:53:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8775:37:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8806:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "8788:17:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8788:24:5"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "8775:9:5"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8745:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "8755:9:5",
                "type": ""
              }
            ],
            "src": "8705:113:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8873:258:5",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8883:10:5",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "8892:1:5",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "8887:1:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8952:63:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "8977:3:5"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "8982:1:5"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "8973:3:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8973:11:5"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "8996:3:5"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "9001:1:5"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "8992:3:5"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "8992:11:5"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "8986:5:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8986:18:5"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "8966:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8966:39:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8966:39:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "8913:1:5"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8916:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "8910:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8910:13:5"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "8924:19:5",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "8926:15:5",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "8935:1:5"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8938:2:5",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "8931:3:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8931:10:5"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "8926:1:5"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "8906:3:5",
                    "statements": []
                  },
                  "src": "8902:113:5"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9049:76:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "9099:3:5"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "9104:6:5"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "9095:3:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9095:16:5"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9113:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "9088:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9088:27:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9088:27:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "9030:1:5"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "9033:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "9027:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9027:13:5"
                  },
                  "nodeType": "YulIf",
                  "src": "9024:101:5"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "8855:3:5",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "8860:3:5",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "8865:6:5",
                "type": ""
              }
            ],
            "src": "8824:307:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9188:269:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9198:22:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "9212:4:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9218:1:5",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "9208:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9208:12:5"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "9198:6:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9229:38:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "9259:4:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9265:1:5",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "9255:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9255:12:5"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "9233:18:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9306:51:5",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "9320:27:5",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "9334:6:5"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9342:4:5",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "9330:3:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9330:17:5"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "9320:6:5"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "9286:18:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "9279:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9279:26:5"
                  },
                  "nodeType": "YulIf",
                  "src": "9276:81:5"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9409:42:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x22",
                            "nodeType": "YulIdentifier",
                            "src": "9423:16:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9423:18:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9423:18:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "9373:18:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "9396:6:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9404:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "9393:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9393:14:5"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "9370:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9370:38:5"
                  },
                  "nodeType": "YulIf",
                  "src": "9367:84:5"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "9172:4:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "9181:6:5",
                "type": ""
              }
            ],
            "src": "9137:320:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9491:152:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9508:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9511:77:5",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9501:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9501:88:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9501:88:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9605:1:5",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9608:4:5",
                        "type": "",
                        "value": "0x22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9598:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9598:15:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9598:15:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9629:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9632:4:5",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "9622:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9622:15:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9622:15:5"
                }
              ]
            },
            "name": "panic_error_0x22",
            "nodeType": "YulFunctionDefinition",
            "src": "9463:180:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9738:28:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9755:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9758:1:5",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "9748:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9748:12:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9748:12:5"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "9649:117:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9861:28:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9878:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9881:1:5",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "9871:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9871:12:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9871:12:5"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "9772:117:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9943:54:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9953:38:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9971:5:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9978:2:5",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9967:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9967:14:5"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9987:2:5",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "9983:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9983:7:5"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "9963:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9963:28:5"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "9953:6:5"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9926:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "9936:6:5",
                "type": ""
              }
            ],
            "src": "9895:102:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10109:75:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "10131:6:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10139:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10127:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10127:14:5"
                      },
                      {
                        "hexValue": "4e6f7420656e6f75676820657468657220696e207468652072657365727665",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10143:33:5",
                        "type": "",
                        "value": "Not enough ether in the reserve"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10120:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10120:57:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10120:57:5"
                }
              ]
            },
            "name": "store_literal_in_memory_141fcb4cadd1d2d547f0a89092e511d28de4d9074ef5386aa9ed6d5ae1e3c484",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "10101:6:5",
                "type": ""
              }
            ],
            "src": "10003:181:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10296:118:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "10318:6:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10326:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10314:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10314:14:5"
                      },
                      {
                        "hexValue": "596f75206e65656420746f2073656c6c206174206c6561737420736f6d652074",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10330:34:5",
                        "type": "",
                        "value": "You need to sell at least some t"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10307:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10307:58:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10307:58:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "10386:6:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10394:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10382:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10382:15:5"
                      },
                      {
                        "hexValue": "6f6b656e73",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10399:7:5",
                        "type": "",
                        "value": "okens"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10375:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10375:32:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10375:32:5"
                }
              ]
            },
            "name": "store_literal_in_memory_678ee0b96747772543566939e944d1564f7cbd541aeffda6bfd357fe4a2fbd61",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "10288:6:5",
                "type": ""
              }
            ],
            "src": "10190:224:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10526:76:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "10548:6:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10556:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10544:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10544:14:5"
                      },
                      {
                        "hexValue": "4e6f7420656e6f75676820746f6b656e7320696e207468652072657365727665",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10560:34:5",
                        "type": "",
                        "value": "Not enough tokens in the reserve"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10537:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10537:58:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10537:58:5"
                }
              ]
            },
            "name": "store_literal_in_memory_e11c8f04e2b1fb46d5ad724dbc8387e938437ecdd510be07e544e2a61a447dca",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "10518:6:5",
                "type": ""
              }
            ],
            "src": "10420:182:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10714:71:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "10736:6:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10744:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10732:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10732:14:5"
                      },
                      {
                        "hexValue": "596f75206e65656420746f2073656e6420736f6d65206574686572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10748:29:5",
                        "type": "",
                        "value": "You need to send some ether"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10725:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10725:53:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10725:53:5"
                }
              ]
            },
            "name": "store_literal_in_memory_e9acd944d98c8ae0ab88f544d8f5ce84bcc3e9ee2749b1db4940bca15dfc8a6d",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "10706:6:5",
                "type": ""
              }
            ],
            "src": "10608:177:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10831:76:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10885:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10894:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10897:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10887:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10887:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10887:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10854:5:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "10876:5:5"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "10861:14:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10861:21:5"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "10851:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10851:32:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10844:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10844:40:5"
                  },
                  "nodeType": "YulIf",
                  "src": "10841:60:5"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10824:5:5",
                "type": ""
              }
            ],
            "src": "10791:116:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10956:79:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11013:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11022:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11025:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "11015:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11015:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11015:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10979:5:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "11004:5:5"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "10986:17:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10986:24:5"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "10976:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10976:35:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10969:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10969:43:5"
                  },
                  "nodeType": "YulIf",
                  "src": "10966:63:5"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10949:5:5",
                "type": ""
              }
            ],
            "src": "10913:122:5"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_contract$_ERC20Interface_$239_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ERC20Interface_$239_to_t_address(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_141fcb4cadd1d2d547f0a89092e511d28de4d9074ef5386aa9ed6d5ae1e3c484_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_141fcb4cadd1d2d547f0a89092e511d28de4d9074ef5386aa9ed6d5ae1e3c484(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_678ee0b96747772543566939e944d1564f7cbd541aeffda6bfd357fe4a2fbd61_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_678ee0b96747772543566939e944d1564f7cbd541aeffda6bfd357fe4a2fbd61(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_e11c8f04e2b1fb46d5ad724dbc8387e938437ecdd510be07e544e2a61a447dca_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_e11c8f04e2b1fb46d5ad724dbc8387e938437ecdd510be07e544e2a61a447dca(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_e9acd944d98c8ae0ab88f544d8f5ce84bcc3e9ee2749b1db4940bca15dfc8a6d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_e9acd944d98c8ae0ab88f544d8f5ce84bcc3e9ee2749b1db4940bca15dfc8a6d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_contract$_ERC20Interface_$239__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ERC20Interface_$239_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_141fcb4cadd1d2d547f0a89092e511d28de4d9074ef5386aa9ed6d5ae1e3c484__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_141fcb4cadd1d2d547f0a89092e511d28de4d9074ef5386aa9ed6d5ae1e3c484_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_678ee0b96747772543566939e944d1564f7cbd541aeffda6bfd357fe4a2fbd61__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_678ee0b96747772543566939e944d1564f7cbd541aeffda6bfd357fe4a2fbd61_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e11c8f04e2b1fb46d5ad724dbc8387e938437ecdd510be07e544e2a61a447dca__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e11c8f04e2b1fb46d5ad724dbc8387e938437ecdd510be07e544e2a61a447dca_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e9acd944d98c8ae0ab88f544d8f5ce84bcc3e9ee2749b1db4940bca15dfc8a6d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e9acd944d98c8ae0ab88f544d8f5ce84bcc3e9ee2749b1db4940bca15dfc8a6d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_ERC20Interface_$239_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_141fcb4cadd1d2d547f0a89092e511d28de4d9074ef5386aa9ed6d5ae1e3c484(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough ether in the reserve\")\n\n    }\n\n    function store_literal_in_memory_678ee0b96747772543566939e944d1564f7cbd541aeffda6bfd357fe4a2fbd61(memPtr) {\n\n        mstore(add(memPtr, 0), \"You need to sell at least some t\")\n\n        mstore(add(memPtr, 32), \"okens\")\n\n    }\n\n    function store_literal_in_memory_e11c8f04e2b1fb46d5ad724dbc8387e938437ecdd510be07e544e2a61a447dca(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough tokens in the reserve\")\n\n    }\n\n    function store_literal_in_memory_e9acd944d98c8ae0ab88f544d8f5ce84bcc3e9ee2749b1db4940bca15dfc8a6d(memPtr) {\n\n        mstore(add(memPtr, 0), \"You need to send some ether\")\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 5,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "89:1326:0:-:0;;;220:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;255:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;381:6;373:5;;:14;;;;;;;;;;;;;;;;;;255:140;89:1326;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:179:5:-;82:5;113:6;107:13;98:22;;129:51;174:5;129:51;:::i;:::-;7:179;;;;:::o;192:387::-;280:6;329:2;317:9;308:7;304:23;300:32;297:119;;;335:79;;:::i;:::-;297:119;455:1;480:82;554:7;545:6;534:9;530:22;480:82;:::i;:::-;470:92;;426:146;192:387;;;;:::o;666:96::-;703:7;732:24;750:5;732:24;:::i;:::-;721:35;;666:96;;;:::o;768:114::-;823:7;852:24;870:5;852:24;:::i;:::-;841:35;;768:114;;;:::o;888:126::-;925:7;965:42;958:5;954:54;943:65;;888:126;;;:::o;1020:320::-;1064:6;1101:1;1095:4;1091:12;1081:22;;1148:1;1142:4;1138:12;1169:18;1159:81;;1225:4;1217:6;1213:17;1203:27;;1159:81;1287:2;1279:6;1276:14;1256:18;1253:38;1250:84;;;1306:18;;:::i;:::-;1250:84;1071:269;1020:320;;;:::o;1346:180::-;1394:77;1391:1;1384:88;1491:4;1488:1;1481:15;1515:4;1512:1;1505:15;1655:117;1764:1;1761;1754:12;1778:158;1869:42;1905:5;1869:42;:::i;:::-;1862:5;1859:53;1849:81;;1926:1;1923;1916:12;1849:81;1778:158;:::o;89:1326:0:-;;;;;;;",
  "deployedSourceMap": "89:1326:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;220:26;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;866:490;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;404:454;;;:::i;:::-;;186:27;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;220:26;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;866:490::-;937:1;928:6;:10;920:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;1024:6;999:21;:31;;991:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;1077:17;1097:5;;;;;;;;;;;:15;;;1113:10;1133:4;1097:42;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1077:62;;1220:5;;;;;;;;;;:18;;;1239:10;1259:4;1266:6;1220:53;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1292:10;1284:28;;:36;1313:6;1284:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1336:12;1341:6;1336:12;;;;;;:::i;:::-;;;;;;;;909:447;866:490;:::o;404:454::-;452:19;474:9;452:31;;494:18;515:5;;;;;;;;;;;:15;;;539:4;515:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;494:51;;578:1;564:11;:15;556:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;645:10;630:11;:25;;622:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;703:5;;;;;;;;;;:14;;;718:10;730:11;703:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;831:19;838:11;831:19;;;;;;:::i;:::-;;;;;;;;440:418;;404:454::o;186:27::-;;;;;;;;;;;;:::o;7:137:5:-;61:5;92:6;86:13;77:22;;108:30;132:5;108:30;:::i;:::-;7:137;;;;:::o;150:139::-;196:5;234:6;221:20;212:29;;250:33;277:5;250:33;:::i;:::-;150:139;;;;:::o;295:143::-;352:5;383:6;377:13;368:22;;399:33;426:5;399:33;:::i;:::-;295:143;;;;:::o;444:345::-;511:6;560:2;548:9;539:7;535:23;531:32;528:119;;;566:79;;:::i;:::-;528:119;686:1;711:61;764:7;755:6;744:9;740:22;711:61;:::i;:::-;701:71;;657:125;444:345;;;;:::o;795:329::-;854:6;903:2;891:9;882:7;878:23;874:32;871:119;;;909:79;;:::i;:::-;871:119;1029:1;1054:53;1099:7;1090:6;1079:9;1075:22;1054:53;:::i;:::-;1044:63;;1000:117;795:329;;;;:::o;1130:351::-;1200:6;1249:2;1237:9;1228:7;1224:23;1220:32;1217:119;;;1255:79;;:::i;:::-;1217:119;1375:1;1400:64;1456:7;1447:6;1436:9;1432:22;1400:64;:::i;:::-;1390:74;;1346:128;1130:351;;;;:::o;1487:118::-;1574:24;1592:5;1574:24;:::i;:::-;1569:3;1562:37;1487:118;;:::o;1611:175::-;1720:59;1773:5;1720:59;:::i;:::-;1715:3;1708:72;1611:175;;:::o;1792:364::-;1880:3;1908:39;1941:5;1908:39;:::i;:::-;1963:71;2027:6;2022:3;1963:71;:::i;:::-;1956:78;;2043:52;2088:6;2083:3;2076:4;2069:5;2065:16;2043:52;:::i;:::-;2120:29;2142:6;2120:29;:::i;:::-;2115:3;2111:39;2104:46;;1884:272;1792:364;;;;:::o;2162:366::-;2304:3;2325:67;2389:2;2384:3;2325:67;:::i;:::-;2318:74;;2401:93;2490:3;2401:93;:::i;:::-;2519:2;2514:3;2510:12;2503:19;;2162:366;;;:::o;2534:::-;2676:3;2697:67;2761:2;2756:3;2697:67;:::i;:::-;2690:74;;2773:93;2862:3;2773:93;:::i;:::-;2891:2;2886:3;2882:12;2875:19;;2534:366;;;:::o;2906:::-;3048:3;3069:67;3133:2;3128:3;3069:67;:::i;:::-;3062:74;;3145:93;3234:3;3145:93;:::i;:::-;3263:2;3258:3;3254:12;3247:19;;2906:366;;;:::o;3278:::-;3420:3;3441:67;3505:2;3500:3;3441:67;:::i;:::-;3434:74;;3517:93;3606:3;3517:93;:::i;:::-;3635:2;3630:3;3626:12;3619:19;;3278:366;;;:::o;3650:118::-;3737:24;3755:5;3737:24;:::i;:::-;3732:3;3725:37;3650:118;;:::o;3774:222::-;3867:4;3905:2;3894:9;3890:18;3882:26;;3918:71;3986:1;3975:9;3971:17;3962:6;3918:71;:::i;:::-;3774:222;;;;:::o;4002:332::-;4123:4;4161:2;4150:9;4146:18;4138:26;;4174:71;4242:1;4231:9;4227:17;4218:6;4174:71;:::i;:::-;4255:72;4323:2;4312:9;4308:18;4299:6;4255:72;:::i;:::-;4002:332;;;;;:::o;4340:442::-;4489:4;4527:2;4516:9;4512:18;4504:26;;4540:71;4608:1;4597:9;4593:17;4584:6;4540:71;:::i;:::-;4621:72;4689:2;4678:9;4674:18;4665:6;4621:72;:::i;:::-;4703;4771:2;4760:9;4756:18;4747:6;4703:72;:::i;:::-;4340:442;;;;;;:::o;4788:332::-;4909:4;4947:2;4936:9;4932:18;4924:26;;4960:71;5028:1;5017:9;5013:17;5004:6;4960:71;:::i;:::-;5041:72;5109:2;5098:9;5094:18;5085:6;5041:72;:::i;:::-;4788:332;;;;;:::o;5126:266::-;5241:4;5279:2;5268:9;5264:18;5256:26;;5292:93;5382:1;5371:9;5367:17;5358:6;5292:93;:::i;:::-;5126:266;;;;:::o;5398:313::-;5511:4;5549:2;5538:9;5534:18;5526:26;;5598:9;5592:4;5588:20;5584:1;5573:9;5569:17;5562:47;5626:78;5699:4;5690:6;5626:78;:::i;:::-;5618:86;;5398:313;;;;:::o;5717:419::-;5883:4;5921:2;5910:9;5906:18;5898:26;;5970:9;5964:4;5960:20;5956:1;5945:9;5941:17;5934:47;5998:131;6124:4;5998:131;:::i;:::-;5990:139;;5717:419;;;:::o;6142:::-;6308:4;6346:2;6335:9;6331:18;6323:26;;6395:9;6389:4;6385:20;6381:1;6370:9;6366:17;6359:47;6423:131;6549:4;6423:131;:::i;:::-;6415:139;;6142:419;;;:::o;6567:::-;6733:4;6771:2;6760:9;6756:18;6748:26;;6820:9;6814:4;6810:20;6806:1;6795:9;6791:17;6784:47;6848:131;6974:4;6848:131;:::i;:::-;6840:139;;6567:419;;;:::o;6992:::-;7158:4;7196:2;7185:9;7181:18;7173:26;;7245:9;7239:4;7235:20;7231:1;7220:9;7216:17;7209:47;7273:131;7399:4;7273:131;:::i;:::-;7265:139;;6992:419;;;:::o;7417:222::-;7510:4;7548:2;7537:9;7533:18;7525:26;;7561:71;7629:1;7618:9;7614:17;7605:6;7561:71;:::i;:::-;7417:222;;;;:::o;7726:99::-;7778:6;7812:5;7806:12;7796:22;;7726:99;;;:::o;7831:169::-;7915:11;7949:6;7944:3;7937:19;7989:4;7984:3;7980:14;7965:29;;7831:169;;;;:::o;8006:96::-;8043:7;8072:24;8090:5;8072:24;:::i;:::-;8061:35;;8006:96;;;:::o;8108:90::-;8142:7;8185:5;8178:13;8171:21;8160:32;;8108:90;;;:::o;8204:126::-;8241:7;8281:42;8274:5;8270:54;8259:65;;8204:126;;;:::o;8336:77::-;8373:7;8402:5;8391:16;;8336:77;;;:::o;8419:148::-;8491:9;8524:37;8555:5;8524:37;:::i;:::-;8511:50;;8419:148;;;:::o;8573:126::-;8623:9;8656:37;8687:5;8656:37;:::i;:::-;8643:50;;8573:126;;;:::o;8705:113::-;8755:9;8788:24;8806:5;8788:24;:::i;:::-;8775:37;;8705:113;;;:::o;8824:307::-;8892:1;8902:113;8916:6;8913:1;8910:13;8902:113;;;9001:1;8996:3;8992:11;8986:18;8982:1;8977:3;8973:11;8966:39;8938:2;8935:1;8931:10;8926:15;;8902:113;;;9033:6;9030:1;9027:13;9024:101;;;9113:1;9104:6;9099:3;9095:16;9088:27;9024:101;8873:258;8824:307;;;:::o;9137:320::-;9181:6;9218:1;9212:4;9208:12;9198:22;;9265:1;9259:4;9255:12;9286:18;9276:81;;9342:4;9334:6;9330:17;9320:27;;9276:81;9404:2;9396:6;9393:14;9373:18;9370:38;9367:84;;;9423:18;;:::i;:::-;9367:84;9188:269;9137:320;;;:::o;9463:180::-;9511:77;9508:1;9501:88;9608:4;9605:1;9598:15;9632:4;9629:1;9622:15;9772:117;9881:1;9878;9871:12;9895:102;9936:6;9987:2;9983:7;9978:2;9971:5;9967:14;9963:28;9953:38;;9895:102;;;:::o;10003:181::-;10143:33;10139:1;10131:6;10127:14;10120:57;10003:181;:::o;10190:224::-;10330:34;10326:1;10318:6;10314:14;10307:58;10399:7;10394:2;10386:6;10382:15;10375:32;10190:224;:::o;10420:182::-;10560:34;10556:1;10548:6;10544:14;10537:58;10420:182;:::o;10608:177::-;10748:29;10744:1;10736:6;10732:14;10725:53;10608:177;:::o;10791:116::-;10861:21;10876:5;10861:21;:::i;:::-;10854:5;10851:32;10841:60;;10897:1;10894;10887:12;10841:60;10791:116;:::o;10913:122::-;10986:24;11004:5;10986:24;:::i;:::-;10979:5;10976:35;10966:63;;11025:1;11022;11015:12;10966:63;10913:122;:::o",
  "source": "pragma solidity ^0.8.0;\r\n\r\nimport \"./ERC20Interface.sol\";\r\nimport \"./ERC20Token.sol\";\r\n\r\ncontract DEX {   \r\n\r\n    event Bought(uint256 amount);\r\n    event Sold(uint256 amount);\r\n\r\n\r\n    ERC20Interface public token;\r\n    string public name = 'DEX';\r\n\r\n    constructor(ERC20Token _token) public {\r\n        //token = new ERC20Token(/*\"TEST\", \"ERC20\", 18, 1000000*/);\r\n        token = _token;\r\n    } \r\n\r\n    function buyTokens() public payable { \r\n        uint256 amountTobuy = msg.value;\r\n        uint256 dexBalance = token.balanceOf(address(this));\r\n        require(amountTobuy > 0, \"You need to send some ether\");\r\n        require(amountTobuy <= dexBalance, \"Not enough tokens in the reserve\");\r\n        token.transfer(msg.sender, amountTobuy); \r\n        // token.transferFrom(address(this), msg.sender, amountTobuy);\r\n        emit Bought(amountTobuy);\r\n    }\r\n\r\n    function sellTokens(uint256 amount) public {\r\n        require(amount > 0, \"You need to sell at least some tokens\");\r\n        require(address(this).balance >= amount, \"Not enough ether in the reserve\");\r\n        uint256 allowance = token.allowance(msg.sender, address(this));\r\n      //  require(allowance >= amount, \"Check the token allowance\");\r\n        token.transferFrom(msg.sender, address(this), amount);\r\n        payable(msg.sender).transfer(amount);\r\n        emit Sold(amount);\r\n    } \r\n\r\n   /* function () external payable {   \r\n    } */\r\n\r\n} ",
  "sourcePath": "C:\\Users\\user\\git\\solidity\\SmartContract\\contracts\\DEX.sol",
  "ast": {
    "absolutePath": "project:/contracts/DEX.sol",
    "exportedSymbols": {
      "Context": [
        705
      ],
      "DEX": [
        135
      ],
      "ERC20Interface": [
        239
      ],
      "ERC20Token": [
        579
      ],
      "Ownable": [
        683
      ]
    },
    "id": 136,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "absolutePath": "project:/contracts/ERC20Interface.sol",
        "file": "./ERC20Interface.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 136,
        "sourceUnit": 240,
        "src": "27:30:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/ERC20Token.sol",
        "file": "./ERC20Token.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 136,
        "sourceUnit": 580,
        "src": "59:26:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 135,
        "linearizedBaseContracts": [
          135
        ],
        "name": "DEX",
        "nameLocation": "98:3:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "id": 7,
            "name": "Bought",
            "nameLocation": "120:6:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 6,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "135:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 7,
                  "src": "127:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "127:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "126:16:0"
            },
            "src": "114:29:0"
          },
          {
            "anonymous": false,
            "id": 11,
            "name": "Sold",
            "nameLocation": "155:4:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 10,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "168:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 11,
                  "src": "160:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "160:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "159:16:0"
            },
            "src": "149:27:0"
          },
          {
            "constant": false,
            "functionSelector": "fc0c546a",
            "id": 14,
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "208:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 135,
            "src": "186:27:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20Interface_$239",
              "typeString": "contract ERC20Interface"
            },
            "typeName": {
              "id": 13,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 12,
                "name": "ERC20Interface",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 239,
                "src": "186:14:0"
              },
              "referencedDeclaration": 239,
              "src": "186:14:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Interface_$239",
                "typeString": "contract ERC20Interface"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "06fdde03",
            "id": 17,
            "mutability": "mutable",
            "name": "name",
            "nameLocation": "234:4:0",
            "nodeType": "VariableDeclaration",
            "scope": 135,
            "src": "220:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 15,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "220:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "444558",
              "id": 16,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "241:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_51489d4263e7aff6c512a83666a144c08d740a160db30b26495ddfc5e7f1c21e",
                "typeString": "literal_string \"DEX\""
              },
              "value": "DEX"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 27,
              "nodeType": "Block",
              "src": "293:102:0",
              "statements": [
                {
                  "expression": {
                    "id": 25,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 23,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "373:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Interface_$239",
                        "typeString": "contract ERC20Interface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 24,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "381:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Token_$579",
                        "typeString": "contract ERC20Token"
                      }
                    },
                    "src": "373:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Interface_$239",
                      "typeString": "contract ERC20Interface"
                    }
                  },
                  "id": 26,
                  "nodeType": "ExpressionStatement",
                  "src": "373:14:0"
                }
              ]
            },
            "id": 28,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 21,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "278:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 28,
                  "src": "267:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20Token_$579",
                    "typeString": "contract ERC20Token"
                  },
                  "typeName": {
                    "id": 19,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 18,
                      "name": "ERC20Token",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 579,
                      "src": "267:10:0"
                    },
                    "referencedDeclaration": 579,
                    "src": "267:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Token_$579",
                      "typeString": "contract ERC20Token"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "266:19:0"
            },
            "returnParameters": {
              "id": 22,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "293:0:0"
            },
            "scope": 135,
            "src": "255:140:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 72,
              "nodeType": "Block",
              "src": "440:418:0",
              "statements": [
                {
                  "assignments": [
                    32
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 32,
                      "mutability": "mutable",
                      "name": "amountTobuy",
                      "nameLocation": "460:11:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 72,
                      "src": "452:19:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 31,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "452:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 35,
                  "initialValue": {
                    "expression": {
                      "id": 33,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "474:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 34,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "value",
                    "nodeType": "MemberAccess",
                    "src": "474:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "452:31:0"
                },
                {
                  "assignments": [
                    37
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37,
                      "mutability": "mutable",
                      "name": "dexBalance",
                      "nameLocation": "502:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 72,
                      "src": "494:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 36,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "494:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 42,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "539:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DEX_$135",
                              "typeString": "contract DEX"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DEX_$135",
                              "typeString": "contract DEX"
                            }
                          ],
                          "id": 41,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "531:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 40,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "531:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 43,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "531:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 38,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "515:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Interface_$239",
                          "typeString": "contract ERC20Interface"
                        }
                      },
                      "id": 39,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 189,
                      "src": "515:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 44,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "515:30:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "494:51:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 49,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 47,
                          "name": "amountTobuy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32,
                          "src": "564:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 48,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "578:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "564:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206e65656420746f2073656e6420736f6d65206574686572",
                        "id": 50,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "581:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e9acd944d98c8ae0ab88f544d8f5ce84bcc3e9ee2749b1db4940bca15dfc8a6d",
                          "typeString": "literal_string \"You need to send some ether\""
                        },
                        "value": "You need to send some ether"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e9acd944d98c8ae0ab88f544d8f5ce84bcc3e9ee2749b1db4940bca15dfc8a6d",
                          "typeString": "literal_string \"You need to send some ether\""
                        }
                      ],
                      "id": 46,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "556:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 51,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "556:55:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52,
                  "nodeType": "ExpressionStatement",
                  "src": "556:55:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 56,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 54,
                          "name": "amountTobuy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32,
                          "src": "630:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 55,
                          "name": "dexBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37,
                          "src": "645:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "630:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f75676820746f6b656e7320696e207468652072657365727665",
                        "id": 57,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "657:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e11c8f04e2b1fb46d5ad724dbc8387e938437ecdd510be07e544e2a61a447dca",
                          "typeString": "literal_string \"Not enough tokens in the reserve\""
                        },
                        "value": "Not enough tokens in the reserve"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e11c8f04e2b1fb46d5ad724dbc8387e938437ecdd510be07e544e2a61a447dca",
                          "typeString": "literal_string \"Not enough tokens in the reserve\""
                        }
                      ],
                      "id": 53,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "622:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 58,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "622:70:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59,
                  "nodeType": "ExpressionStatement",
                  "src": "622:70:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 63,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "718:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 64,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "718:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 65,
                        "name": "amountTobuy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "730:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 60,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "703:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Interface_$239",
                          "typeString": "contract ERC20Interface"
                        }
                      },
                      "id": 62,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 207,
                      "src": "703:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) payable external returns (bool)"
                      }
                    },
                    "id": 66,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "703:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 67,
                  "nodeType": "ExpressionStatement",
                  "src": "703:39:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 69,
                        "name": "amountTobuy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "838:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 68,
                      "name": "Bought",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "831:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 70,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "831:19:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 71,
                  "nodeType": "EmitStatement",
                  "src": "826:24:0"
                }
              ]
            },
            "functionSelector": "d0febe4c",
            "id": 73,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buyTokens",
            "nameLocation": "413:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "422:2:0"
            },
            "returnParameters": {
              "id": 30,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "440:0:0"
            },
            "scope": 135,
            "src": "404:454:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 133,
              "nodeType": "Block",
              "src": "909:447:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 81,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 79,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 75,
                          "src": "928:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 80,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "937:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "928:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206e65656420746f2073656c6c206174206c6561737420736f6d6520746f6b656e73",
                        "id": 82,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "940:39:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_678ee0b96747772543566939e944d1564f7cbd541aeffda6bfd357fe4a2fbd61",
                          "typeString": "literal_string \"You need to sell at least some tokens\""
                        },
                        "value": "You need to sell at least some tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_678ee0b96747772543566939e944d1564f7cbd541aeffda6bfd357fe4a2fbd61",
                          "typeString": "literal_string \"You need to sell at least some tokens\""
                        }
                      ],
                      "id": 78,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "920:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 83,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "920:60:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84,
                  "nodeType": "ExpressionStatement",
                  "src": "920:60:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 92,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 88,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "1007:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_DEX_$135",
                                  "typeString": "contract DEX"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_DEX_$135",
                                  "typeString": "contract DEX"
                                }
                              ],
                              "id": 87,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "999:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 86,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "999:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 89,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "999:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 90,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "999:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 91,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 75,
                          "src": "1024:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "999:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f75676820657468657220696e207468652072657365727665",
                        "id": 93,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1032:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_141fcb4cadd1d2d547f0a89092e511d28de4d9074ef5386aa9ed6d5ae1e3c484",
                          "typeString": "literal_string \"Not enough ether in the reserve\""
                        },
                        "value": "Not enough ether in the reserve"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_141fcb4cadd1d2d547f0a89092e511d28de4d9074ef5386aa9ed6d5ae1e3c484",
                          "typeString": "literal_string \"Not enough ether in the reserve\""
                        }
                      ],
                      "id": 85,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "991:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 94,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "991:75:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 95,
                  "nodeType": "ExpressionStatement",
                  "src": "991:75:0"
                },
                {
                  "assignments": [
                    97
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 97,
                      "mutability": "mutable",
                      "name": "allowance",
                      "nameLocation": "1085:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 133,
                      "src": "1077:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 96,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1077:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 107,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 100,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1113:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1113:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 104,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1133:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DEX_$135",
                              "typeString": "contract DEX"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DEX_$135",
                              "typeString": "contract DEX"
                            }
                          ],
                          "id": 103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1125:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 102,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1125:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1125:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 98,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "1097:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Interface_$239",
                          "typeString": "contract ERC20Interface"
                        }
                      },
                      "id": 99,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "allowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 198,
                      "src": "1097:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view external returns (uint256)"
                      }
                    },
                    "id": 106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1097:42:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1077:62:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 111,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1239:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1239:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 115,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1259:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DEX_$135",
                              "typeString": "contract DEX"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DEX_$135",
                              "typeString": "contract DEX"
                            }
                          ],
                          "id": 114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1251:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 113,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1251:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1251:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 117,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75,
                        "src": "1266:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 108,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "1220:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Interface_$239",
                          "typeString": "contract ERC20Interface"
                        }
                      },
                      "id": 110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 218,
                      "src": "1220:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) payable external returns (bool)"
                      }
                    },
                    "id": 118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1220:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 119,
                  "nodeType": "ExpressionStatement",
                  "src": "1220:53:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 126,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75,
                        "src": "1313:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 122,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1292:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 123,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1292:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1284:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 120,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1284:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1284:19:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 125,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1284:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1284:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 128,
                  "nodeType": "ExpressionStatement",
                  "src": "1284:36:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 130,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75,
                        "src": "1341:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 129,
                      "name": "Sold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "1336:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1336:12:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 132,
                  "nodeType": "EmitStatement",
                  "src": "1331:17:0"
                }
              ]
            },
            "functionSelector": "6c11bcd3",
            "id": 134,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sellTokens",
            "nameLocation": "875:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 76,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "894:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 134,
                  "src": "886:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "886:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "885:16:0"
            },
            "returnParameters": {
              "id": 77,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "909:0:0"
            },
            "scope": 135,
            "src": "866:490:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 136,
        "src": "89:1326:0",
        "usedErrors": []
      }
    ],
    "src": "0:1416:0"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/DEX.sol",
    "exportedSymbols": {
      "Context": [
        705
      ],
      "DEX": [
        135
      ],
      "ERC20Interface": [
        239
      ],
      "ERC20Token": [
        579
      ],
      "Ownable": [
        683
      ]
    },
    "id": 136,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "absolutePath": "project:/contracts/ERC20Interface.sol",
        "file": "./ERC20Interface.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 136,
        "sourceUnit": 240,
        "src": "27:30:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/ERC20Token.sol",
        "file": "./ERC20Token.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 136,
        "sourceUnit": 580,
        "src": "59:26:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 135,
        "linearizedBaseContracts": [
          135
        ],
        "name": "DEX",
        "nameLocation": "98:3:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "id": 7,
            "name": "Bought",
            "nameLocation": "120:6:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 6,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "135:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 7,
                  "src": "127:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "127:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "126:16:0"
            },
            "src": "114:29:0"
          },
          {
            "anonymous": false,
            "id": 11,
            "name": "Sold",
            "nameLocation": "155:4:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 10,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "168:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 11,
                  "src": "160:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "160:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "159:16:0"
            },
            "src": "149:27:0"
          },
          {
            "constant": false,
            "functionSelector": "fc0c546a",
            "id": 14,
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "208:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 135,
            "src": "186:27:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20Interface_$239",
              "typeString": "contract ERC20Interface"
            },
            "typeName": {
              "id": 13,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 12,
                "name": "ERC20Interface",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 239,
                "src": "186:14:0"
              },
              "referencedDeclaration": 239,
              "src": "186:14:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Interface_$239",
                "typeString": "contract ERC20Interface"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "06fdde03",
            "id": 17,
            "mutability": "mutable",
            "name": "name",
            "nameLocation": "234:4:0",
            "nodeType": "VariableDeclaration",
            "scope": 135,
            "src": "220:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 15,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "220:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "444558",
              "id": 16,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "241:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_51489d4263e7aff6c512a83666a144c08d740a160db30b26495ddfc5e7f1c21e",
                "typeString": "literal_string \"DEX\""
              },
              "value": "DEX"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 27,
              "nodeType": "Block",
              "src": "293:102:0",
              "statements": [
                {
                  "expression": {
                    "id": 25,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 23,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "373:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Interface_$239",
                        "typeString": "contract ERC20Interface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 24,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "381:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Token_$579",
                        "typeString": "contract ERC20Token"
                      }
                    },
                    "src": "373:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Interface_$239",
                      "typeString": "contract ERC20Interface"
                    }
                  },
                  "id": 26,
                  "nodeType": "ExpressionStatement",
                  "src": "373:14:0"
                }
              ]
            },
            "id": 28,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 21,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "278:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 28,
                  "src": "267:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20Token_$579",
                    "typeString": "contract ERC20Token"
                  },
                  "typeName": {
                    "id": 19,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 18,
                      "name": "ERC20Token",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 579,
                      "src": "267:10:0"
                    },
                    "referencedDeclaration": 579,
                    "src": "267:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Token_$579",
                      "typeString": "contract ERC20Token"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "266:19:0"
            },
            "returnParameters": {
              "id": 22,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "293:0:0"
            },
            "scope": 135,
            "src": "255:140:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 72,
              "nodeType": "Block",
              "src": "440:418:0",
              "statements": [
                {
                  "assignments": [
                    32
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 32,
                      "mutability": "mutable",
                      "name": "amountTobuy",
                      "nameLocation": "460:11:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 72,
                      "src": "452:19:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 31,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "452:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 35,
                  "initialValue": {
                    "expression": {
                      "id": 33,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "474:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 34,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "value",
                    "nodeType": "MemberAccess",
                    "src": "474:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "452:31:0"
                },
                {
                  "assignments": [
                    37
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37,
                      "mutability": "mutable",
                      "name": "dexBalance",
                      "nameLocation": "502:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 72,
                      "src": "494:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 36,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "494:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 42,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "539:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DEX_$135",
                              "typeString": "contract DEX"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DEX_$135",
                              "typeString": "contract DEX"
                            }
                          ],
                          "id": 41,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "531:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 40,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "531:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 43,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "531:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 38,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "515:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Interface_$239",
                          "typeString": "contract ERC20Interface"
                        }
                      },
                      "id": 39,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 189,
                      "src": "515:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 44,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "515:30:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "494:51:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 49,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 47,
                          "name": "amountTobuy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32,
                          "src": "564:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 48,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "578:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "564:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206e65656420746f2073656e6420736f6d65206574686572",
                        "id": 50,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "581:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e9acd944d98c8ae0ab88f544d8f5ce84bcc3e9ee2749b1db4940bca15dfc8a6d",
                          "typeString": "literal_string \"You need to send some ether\""
                        },
                        "value": "You need to send some ether"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e9acd944d98c8ae0ab88f544d8f5ce84bcc3e9ee2749b1db4940bca15dfc8a6d",
                          "typeString": "literal_string \"You need to send some ether\""
                        }
                      ],
                      "id": 46,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "556:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 51,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "556:55:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52,
                  "nodeType": "ExpressionStatement",
                  "src": "556:55:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 56,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 54,
                          "name": "amountTobuy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32,
                          "src": "630:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 55,
                          "name": "dexBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37,
                          "src": "645:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "630:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f75676820746f6b656e7320696e207468652072657365727665",
                        "id": 57,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "657:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e11c8f04e2b1fb46d5ad724dbc8387e938437ecdd510be07e544e2a61a447dca",
                          "typeString": "literal_string \"Not enough tokens in the reserve\""
                        },
                        "value": "Not enough tokens in the reserve"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e11c8f04e2b1fb46d5ad724dbc8387e938437ecdd510be07e544e2a61a447dca",
                          "typeString": "literal_string \"Not enough tokens in the reserve\""
                        }
                      ],
                      "id": 53,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "622:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 58,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "622:70:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59,
                  "nodeType": "ExpressionStatement",
                  "src": "622:70:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 63,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "718:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 64,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "718:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 65,
                        "name": "amountTobuy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "730:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 60,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "703:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Interface_$239",
                          "typeString": "contract ERC20Interface"
                        }
                      },
                      "id": 62,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 207,
                      "src": "703:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) payable external returns (bool)"
                      }
                    },
                    "id": 66,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "703:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 67,
                  "nodeType": "ExpressionStatement",
                  "src": "703:39:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 69,
                        "name": "amountTobuy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "838:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 68,
                      "name": "Bought",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "831:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 70,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "831:19:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 71,
                  "nodeType": "EmitStatement",
                  "src": "826:24:0"
                }
              ]
            },
            "functionSelector": "d0febe4c",
            "id": 73,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buyTokens",
            "nameLocation": "413:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "422:2:0"
            },
            "returnParameters": {
              "id": 30,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "440:0:0"
            },
            "scope": 135,
            "src": "404:454:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 133,
              "nodeType": "Block",
              "src": "909:447:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 81,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 79,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 75,
                          "src": "928:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 80,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "937:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "928:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206e65656420746f2073656c6c206174206c6561737420736f6d6520746f6b656e73",
                        "id": 82,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "940:39:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_678ee0b96747772543566939e944d1564f7cbd541aeffda6bfd357fe4a2fbd61",
                          "typeString": "literal_string \"You need to sell at least some tokens\""
                        },
                        "value": "You need to sell at least some tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_678ee0b96747772543566939e944d1564f7cbd541aeffda6bfd357fe4a2fbd61",
                          "typeString": "literal_string \"You need to sell at least some tokens\""
                        }
                      ],
                      "id": 78,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "920:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 83,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "920:60:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84,
                  "nodeType": "ExpressionStatement",
                  "src": "920:60:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 92,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 88,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "1007:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_DEX_$135",
                                  "typeString": "contract DEX"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_DEX_$135",
                                  "typeString": "contract DEX"
                                }
                              ],
                              "id": 87,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "999:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 86,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "999:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 89,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "999:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 90,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "999:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 91,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 75,
                          "src": "1024:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "999:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f75676820657468657220696e207468652072657365727665",
                        "id": 93,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1032:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_141fcb4cadd1d2d547f0a89092e511d28de4d9074ef5386aa9ed6d5ae1e3c484",
                          "typeString": "literal_string \"Not enough ether in the reserve\""
                        },
                        "value": "Not enough ether in the reserve"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_141fcb4cadd1d2d547f0a89092e511d28de4d9074ef5386aa9ed6d5ae1e3c484",
                          "typeString": "literal_string \"Not enough ether in the reserve\""
                        }
                      ],
                      "id": 85,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "991:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 94,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "991:75:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 95,
                  "nodeType": "ExpressionStatement",
                  "src": "991:75:0"
                },
                {
                  "assignments": [
                    97
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 97,
                      "mutability": "mutable",
                      "name": "allowance",
                      "nameLocation": "1085:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 133,
                      "src": "1077:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 96,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1077:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 107,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 100,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1113:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1113:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 104,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1133:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DEX_$135",
                              "typeString": "contract DEX"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DEX_$135",
                              "typeString": "contract DEX"
                            }
                          ],
                          "id": 103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1125:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 102,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1125:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1125:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 98,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "1097:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Interface_$239",
                          "typeString": "contract ERC20Interface"
                        }
                      },
                      "id": 99,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "allowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 198,
                      "src": "1097:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view external returns (uint256)"
                      }
                    },
                    "id": 106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1097:42:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1077:62:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 111,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1239:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1239:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 115,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1259:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DEX_$135",
                              "typeString": "contract DEX"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DEX_$135",
                              "typeString": "contract DEX"
                            }
                          ],
                          "id": 114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1251:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 113,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1251:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1251:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 117,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75,
                        "src": "1266:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 108,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "1220:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Interface_$239",
                          "typeString": "contract ERC20Interface"
                        }
                      },
                      "id": 110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 218,
                      "src": "1220:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) payable external returns (bool)"
                      }
                    },
                    "id": 118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1220:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 119,
                  "nodeType": "ExpressionStatement",
                  "src": "1220:53:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 126,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75,
                        "src": "1313:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 122,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1292:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 123,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1292:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1284:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 120,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1284:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1284:19:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 125,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1284:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1284:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 128,
                  "nodeType": "ExpressionStatement",
                  "src": "1284:36:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 130,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75,
                        "src": "1341:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 129,
                      "name": "Sold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "1336:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1336:12:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 132,
                  "nodeType": "EmitStatement",
                  "src": "1331:17:0"
                }
              ]
            },
            "functionSelector": "6c11bcd3",
            "id": 134,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sellTokens",
            "nameLocation": "875:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 76,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "894:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 134,
                  "src": "886:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "886:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "885:16:0"
            },
            "returnParameters": {
              "id": 77,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "909:0:0"
            },
            "scope": 135,
            "src": "866:490:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 136,
        "src": "89:1326:0",
        "usedErrors": []
      }
    ],
    "src": "0:1416:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.7+commit.e28d00a7.Emscripten.clang"
  },
  "networks": {
    "1337": {
      "events": {},
      "links": {},
      "address": "0xcb2812645329ba9A2573236A64b5DA810DBA8deb",
      "transactionHash": "0xa6657e69415959ba41f1d2a31683ed57b4d2ba2f77ea3e70d522220c8ba9b7b5"
    },
    "1629724243406": {
      "events": {},
      "links": {},
      "address": "0xCb28FAaE14D13F89Dc685ACB17162f898047d2DF",
      "transactionHash": "0x84795618d96b1054a9e08dba84c0970963bf5b06cad8f2bf53e4b6d2189f2acc"
    },
    "1629727328430": {
      "events": {},
      "links": {},
      "address": "0x5b183cc6484b49DE5E1a9619816303535A0f6826",
      "transactionHash": "0x59c2999c6a283591bb6bda999bc16f083b42e2462107cc1e036af7d580de4eb2"
    },
    "1629839919318": {
      "events": {},
      "links": {},
      "address": "0x1d2757ADc48465c975386A3DAe78cEEc50aFc49F",
      "transactionHash": "0xdfc3486bd37900ffb8290589016967b26c675229e00db639c5ba67793c8db762"
    }
  },
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-08-24T21:19:24.492Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}